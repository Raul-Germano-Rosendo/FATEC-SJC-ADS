#Escreva uma fun√ß√£o recursiva que calcule a soma dos n√∫meros de 1 at√© n.

def soma(n):
    # Caso base: quando n for 1, n√£o h√° mais nada para somar
    if n == 1:
        return 1
    # Caso recursivo: soma o n√∫mero atual com o resultado da fun√ß√£o anterior
    return n + soma(n - 1)

# Exemplo de uso:
print(soma(5))  # Sa√≠da esperada: 15



#üß† Explica√ß√£o:
#A fun√ß√£o se chama novamente com um valor menor (n - 1).
#Cada chamada "espera" o resultado da pr√≥xima.
#Quando chega no caso base, a pilha de chamadas √© resolvida de tr√°s pra frente.

#üìâ Fluxo da recurs√£o:
#soma(5)
#= 5 + soma(4)
#= 5 + (4 + soma(3))
#= 5 + (4 + (3 + soma(2)))
#= 5 + (4 + (3 + (2 + soma(1))))
#= 5 + 4 + 3 + 2 + 1 = 15




# üí° Conceitos importantes:
# - Caso base: condi√ß√£o que para a recurs√£o.
# - Caso recursivo: chamada da fun√ß√£o dentro dela mesma.
# - Cada chamada fica "em espera" at√© que o caso base seja atingido.
# - Recurs√£o √© ideal para problemas que se repetem em vers√µes menores.
